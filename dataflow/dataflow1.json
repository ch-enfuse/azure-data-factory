{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "netflix_data",
						"type": "DatasetReference"
					},
					"name": "netflixInOutputStream"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "netflix_data_output",
						"type": "DatasetReference"
					},
					"name": "netlixSinkOutput"
				}
			],
			"transformations": [
				{
					"name": "selectColumns"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "window1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     Rating as integer (0)",
				"}",
				"source(output(",
				"          {As of} as string,",
				"          Rank as integer,",
				"          {Year to Date Rank} as string,",
				"          {Last Week Rank} as string,",
				"          Title as string,",
				"          Type as string,",
				"          {Netflix Exclusive} as string,",
				"          {Netflix Release Date} as string,",
				"          {Days In Top 10} as string,",
				"          {Viewership Score} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> netflixInOutputStream",
				"netflixInOutputStream select(mapColumn(",
				"          Rank,",
				"          Title",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectColumns",
				"selectColumns aggregate(groupBy(Title),",
				"     AvgRank = avg(toInteger(Rank))) ~> aggregate1",
				"aggregate1 window(over(Title),",
				"     asc(AvgRank, true),",
				"     overallRank = rowNumber()) ~> window1",
				"window1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Column_1 as string,",
				"          Column_2 as string,",
				"          Column_3 as string,",
				"          Column_4 as string,",
				"          Column_5 as string,",
				"          Column_6 as string,",
				"          Column_7 as string,",
				"          Column_8 as string,",
				"          Column_9 as string,",
				"          Column_10 as string",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> netlixSinkOutput"
			]
		}
	}
}